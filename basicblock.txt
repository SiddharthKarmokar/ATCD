#include <stdio.h>
#include <string.h>
#include <stdlib.h>

#define MAX_LINES 100
#define MAX_LENGTH 100

// Function to check if a line contains a branching instruction
int is_leader(char *line) {
    return (strstr(line, "if") || strstr(line, "else") || 
            strstr(line, "while") || strstr(line, "for") || 
            strstr(line, "goto") || strstr(line, "return"));
}

int main() {
    char code[MAX_LINES][MAX_LENGTH];
    int leaders[MAX_LINES] = {0};
    int n = 0;

    printf("Enter the number of lines of code: ");
    scanf("%d", &n);
    getchar(); // Consume newline

    printf("Enter the code:\n");
    for (int i = 0; i < n; i++) {
        fgets(code[i], MAX_LENGTH, stdin);
        code[i][strcspn(code[i], "\n")] = 0; // Remove newline
    }

    // Identify leaders
    leaders[0] = 1; // First statement is always a leader
    for (int i = 0; i < n; i++) {
        if (is_leader(code[i])) {
            if (i + 1 < n) leaders[i + 1] = 1; // Next statement is a leader
        }
    }

    // Print basic blocks
    printf("\nBasic Blocks:\n");
    for (int i = 0; i < n; i++) {
        if (leaders[i]) printf("\n[Block %d]\n", i + 1);
        printf("%s\n", code[i]);
    }

    return 0;
}